{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","startIndexForAddedTask","handleDate","e","setState","target","value","handleChecked","handleText","handleClickButton","newTask","id","important","active","finishDate","alert","props","toAddTask","minDate","tempDate","split","Number","maxDate","join","className","type","placeholder","this","onChange","htmlFor","min","max","onClick","React","Component","Task","task","importantClass","undefined","done","delete","normalisedFinishDate","toLocaleString","TaskList","activeTasks","tasks","filter","map","doneTasks","sort","a","b","length","App","deleteTask","changeTaskStatus","console","log","getTime","prevState","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129f8568.chunk.js","sourcesContent":["import React from 'react';\nimport './AddTask.css';\n\nclass AddTask extends React.Component {\n    state = { \n        text: \"\",\n        checked: false,\n        date: new Date().toISOString().slice(0, 10) /* data dynamiczna */\n    }\n\n    startIndexForAddedTask = 0;\n\n    handleDate = (e) => {\n        this.setState({\n            date: e.target.value\n        })\n    }\n\n    handleChecked =(e) => {\n        this.setState({\n            checked: !this.state.checked\n        })\n    }\n\n    handleText = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n\n    handleClickButton = () => {\n        const newTask = { id: this.startIndexForAddedTask, text: this.state.text, date: this.state.date, important: this.state.checked, active: true, finishDate: null };\n        if (this.state.text) {\n            this.props.toAddTask(newTask);\n            this.startIndexForAddedTask += 1;\n            this.setState({ \n                text: \"\",\n                checked: false,\n                date: new Date().toISOString().slice(0, 10)\n            })\n        } else {\n            return alert(\"Wprowadź zadanie do wykonania\")\n        }                \n    }\n\n    render() { \n        const minDate = new Date().toISOString().slice(0, 10); /* początkowa dla kalendarza */\n        const tempDate = minDate.split('');\n        tempDate[3] = Number(tempDate[3]) + 1;\n        const maxDate = tempDate.join('');\n        return ( \n            <div className=\"form\">\n                <input type=\"text\" placeholder=\"dodaj zadanie\" value={this.state.text} onChange={this.handleText}/>\n                <input type=\"checkbox\" id=\"important\" checked={this.state.checked} onChange={this.handleChecked}/>\n                <label htmlFor=\"important\">priorytet</label>\n                <br/>\n                <label htmlFor=\"date\">do kiedy zrobić</label>\n                <input type=\"date\" id=\"date\" value={this.state.date} min={minDate} max={maxDate} onChange={this.handleDate}/>  {/* format daty */}\n                <br/>\n                <button onClick={this.handleClickButton}>dodaj</button>\n            </div>\n         );\n    }\n}\n \nexport default AddTask;","import React from 'react';\nimport './Task.css';\n\nconst Task = (props) => {\n    const { text, date, id, important, active, finishDate } = props.task\n    const importantClass = important ? \"important\" : undefined\n    if (active) {\n        return (  \n            <div className={importantClass}>\n                <p>\n                    <strong>{text}</strong>\n                    <span> - do </span>\n                    <span> {date} </span>\n                    <button onClick={() => props.done(id)}>Zostało zrobione</button>\n                    <button onClick={() => props.delete(id)}>X</button>\n                </p>\n            </div>\n        );\n    } else  {\n        const normalisedFinishDate = new Date(finishDate).toLocaleString();\n        return (  \n            <div>\n                <p>\n                    <strong>{text}</strong>                    \n                    <em>(zrobić do {date})</em>\n                    <br/>\n                    <span> -potwierdzene wykonania </span> \n                    <span> {normalisedFinishDate} </span>\n                    <button onClick={() => props.delete(id)}>X</button>\n                </p>\n            </div>\n        );\n    }\n}\n \nexport default Task;","import React from 'react';\nimport Task from './Task'\n\nconst TaskList = (props) => {\n\n    const sortMetodForDone = (a, b) => b.finishDate - a.finishDate; \n\n    \n    const activeTasks = props.tasks.filter(task => task.active)\n        .map(task => <Task key={task.id} task={task} delete={props.delete} done={props.done}/>)\n    const doneTasks = props.tasks.filter(task => !task.active)\n        .sort(sortMetodForDone)\n        .map(task => <Task key={task.id} task={task} delete={props.delete} done={props.done}/>)\n    const countOfVisibleDoneTasks = 5; /// zrobić to kontrolowanym przez użytkownika\n    return (  \n        <div className=\"task__list\">\n            <div className=\"activeTask\">\n                <h2>Zadania do zrobienia</h2>\n                {activeTasks.length > 0 ? activeTasks: <p>nie ma nic do zrobienia</p>}       \n                \n            </div>\n\n            <hr/>\n\n            <div className=\"doneTasks\">\n                <h2>Zadania zrobione: {doneTasks.length}</h2>\n                <span>{doneTasks.length > 5 && `wyświetlonych jest ${countOfVisibleDoneTasks} ostatnio wykonanych zadań`}</span>\n                {doneTasks.slice(0, countOfVisibleDoneTasks)}     \n            </div>\n\n\n        </div>\n    );\n}\n \nexport default TaskList;","import React from 'react';\nimport './App.css';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\n\n\nclass App extends React.Component {\n  state = {\n    tasks: [\n      /* {\n        id: 0,\n        text: 'zagrać w wiedźmina',\n        date: '2018-02-15',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n\n      { id: 1, text: \"zrobić dobry uczynej\", date: '2020-11-12', important: false, active: true, finishDate: null },\n      { id: 2, text: \"pomalować dom po sylwestrze\", date: '2019-09-11', important: false, active: true, finishDate: null },\n      { id: 3, text: \"schudnąć 30 kilogramów\", date: '2019-05-20', important: true, active: true, finishDate: null },\n      { id: 4, text: \"sprzedać butelki po piwie (20 skrzynek)\", date: '2020-11-12', important: false, active: true, finishDate: null },\n      { id: 5, text: \"jeszcze raz pomalować dom\", date: '2019-09-11', important: false, active: true, finishDate: null },\n      { id: 6, text: \"fryzjer!!!\", date: '2019-05-20', important: true, active: true, finishDate: null },\n      { id: 7, text: \"nie odbierać poleconego od komornika\", date: '2020-11-12', important: false, active: true, finishDate: null },\n      { id: 8, text: \"kupić 2 butelki litrowe\", date: '2019-09-11', important: false, active: true, finishDate: null }, */\n    ]\n  }\n\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks].filter(task => task.id !== id);\n    this.setState({\n      tasks\n    })\n  }\n\n  changeTaskStatus = (id) => {\n    console.log('done', id)\n    const tasks = [...this.state.tasks].map(task => {\n      if (task.id !== id) {\n        return task;\n      } else {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n        return task;\n      }\n    });\n    this.setState({\n      tasks\n    })\n  }\n\n  toAddTask = (task) => {\n    this.setState(prevState => {\n      const tasks = [...prevState.tasks];\n      tasks.push(task);\n      return ({\n        tasks\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ToDo App</h1>\n        <AddTask toAddTask={this.toAddTask} /* startIndexForFirstAddedTask={this.state.tasks.length} */ /> {/* przekazać wartość przes propsy */}\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} done={this.changeTaskStatus} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}